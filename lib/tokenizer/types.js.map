{"version":3,"names":["beforeExpr","startsExpr","isLoop","isAssign","prefix","postfix","ExportedTokenType","label","keyword","rightAssociative","binop","constructor","conf","process","env","BABEL_8_BREAKING","updateContext","keywords","Map","createKeyword","name","options","token","createToken","set","createBinop","tokenTypeCounter","tokenTypes","tokenLabels","tokenBinops","tokenBeforeExprs","tokenStartsExprs","tokenPrefixes","push","createKeywordLike","tt","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","template","ellipsis","backQuote","dollarBraceL","templateTail","templateNonTail","at","hash","interpreterDirective","eq","assign","slashAssign","xorAssign","moduloAssign","incDec","bang","tilde","doubleCaret","doubleAt","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","lt","gt","relational","bitShift","bitShiftL","bitShiftR","plusMin","modulo","star","slash","exponent","_in","_instanceof","_break","_case","_catch","_continue","_debugger","_default","_else","_finally","_function","_if","_return","_switch","_throw","_try","_var","_const","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_typeof","_void","_delete","_do","_for","_while","_as","_assert","_async","_await","_from","_get","_let","_meta","_of","_sent","_set","_static","_yield","_asserts","_checks","_exports","_global","_implements","_intrinsic","_infer","_is","_mixins","_proto","_require","_keyof","_readonly","_unique","_abstract","_declare","_enum","_module","_namespace","_interface","_type","_opaque","string","num","bigint","decimal","regexp","privateName","eof","jsxName","jsxText","jsxTagStart","jsxTagEnd","placeholder","tokenIsIdentifier","tokenKeywordOrIdentifierIsKeyword","tokenIsKeywordOrIdentifier","tokenIsLiteralPropertyName","tokenComesBeforeExpression","tokenCanStartExpression","tokenIsAssignment","tokenIsFlowInterfaceOrTypeOrOpaque","tokenIsLoop","tokenIsKeyword","tokenIsOperator","tokenIsPostfix","tokenIsPrefix","tokenIsTSTypeOperator","tokenIsTSDeclarationStart","tokenLabelName","tokenOperatorPrecedence","tokenIsBinaryOperator","tokenIsRightAssociative","tokenIsTemplate","getExportedToken","isTokenType","obj","context","pop","tc","brace","length","j_expr","j_oTag"],"sources":["../../src/tokenizer/types.ts"],"sourcesContent":["import { types as tc, type TokContext } from \"./context\";\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between 1) binary\n// expression (<) and JSX Tag start (<name>); 2) object literal and JSX\n// texts. It is set on the `updateContext` function in the JSX plugin.\n\n// The `startsExpr` property is used to determine whether an expression\n// may be the “argument” subexpression of a `yield` expression or\n// `yield` statement. It is set on all token types that may be at the\n// start of a subexpression.\n\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\n\ntype TokenOptions = {\n  keyword?: string;\n  beforeExpr?: boolean;\n  startsExpr?: boolean;\n  rightAssociative?: boolean;\n  isLoop?: boolean;\n  isAssign?: boolean;\n  prefix?: boolean;\n  postfix?: boolean;\n  binop?: number | null;\n};\n\n// Internally the tokenizer stores token as a number\nexport type TokenType = number;\n\n// The `ExportedTokenType` is exported via `tokTypes` and accessible\n// when `tokens: true` is enabled. Unlike internal token type, it provides\n// metadata of the tokens.\nexport class ExportedTokenType {\n  label: string;\n  keyword: string | undefined | null;\n  beforeExpr: boolean;\n  startsExpr: boolean;\n  rightAssociative: boolean;\n  isLoop: boolean;\n  isAssign: boolean;\n  prefix: boolean;\n  postfix: boolean;\n  binop: number | undefined | null;\n  // todo(Babel 8): remove updateContext from exposed token layout\n  declare updateContext:\n    | ((context: Array<TokContext>) => void)\n    | undefined\n    | null;\n\n  constructor(label: string, conf: TokenOptions = {}) {\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    if (!process.env.BABEL_8_BREAKING) {\n      this.updateContext = null;\n    }\n  }\n}\n\n// A map from keyword/keyword-like string value to the token type\nexport const keywords = new Map<string, TokenType>();\n\nfunction createKeyword(name: string, options: TokenOptions = {}): TokenType {\n  options.keyword = name;\n  const token = createToken(name, options);\n  keywords.set(name, token);\n  return token;\n}\n\nfunction createBinop(name: string, binop: number) {\n  return createToken(name, { beforeExpr, binop });\n}\n\nlet tokenTypeCounter = -1;\nexport const tokenTypes: ExportedTokenType[] = [];\nconst tokenLabels: string[] = [];\nconst tokenBinops: number[] = [];\nconst tokenBeforeExprs: boolean[] = [];\nconst tokenStartsExprs: boolean[] = [];\nconst tokenPrefixes: boolean[] = [];\n\nfunction createToken(name: string, options: TokenOptions = {}): TokenType {\n  ++tokenTypeCounter;\n  tokenLabels.push(name);\n  tokenBinops.push(options.binop ?? -1);\n  tokenBeforeExprs.push(options.beforeExpr ?? false);\n  tokenStartsExprs.push(options.startsExpr ?? false);\n  tokenPrefixes.push(options.prefix ?? false);\n  tokenTypes.push(new ExportedTokenType(name, options));\n\n  return tokenTypeCounter;\n}\n\nfunction createKeywordLike(\n  name: string,\n  options: TokenOptions = {},\n): TokenType {\n  ++tokenTypeCounter;\n  keywords.set(name, tokenTypeCounter);\n  tokenLabels.push(name);\n  tokenBinops.push(options.binop ?? -1);\n  tokenBeforeExprs.push(options.beforeExpr ?? false);\n  tokenStartsExprs.push(options.startsExpr ?? false);\n  tokenPrefixes.push(options.prefix ?? false);\n  // In the exported token type, we set the label as \"name\" for backward compatibility with Babel 7\n  tokenTypes.push(new ExportedTokenType(\"name\", options));\n\n  return tokenTypeCounter;\n}\n\n// For performance the token type helpers depend on the following declarations order.\n// When adding new token types, please also check if the token helpers need update.\n\nexport type InternalTokenTypes = {\n  [name: string]: TokenType;\n};\n\nexport const tt: InternalTokenTypes = {\n  // Punctuation token types.\n  bracketL: createToken(\"[\", { beforeExpr, startsExpr }),\n  bracketHashL: createToken(\"#[\", { beforeExpr, startsExpr }),\n  bracketBarL: createToken(\"[|\", { beforeExpr, startsExpr }),\n  bracketR: createToken(\"]\"),\n  bracketBarR: createToken(\"|]\"),\n  braceL: createToken(\"{\", { beforeExpr, startsExpr }),\n  braceBarL: createToken(\"{|\", { beforeExpr, startsExpr }),\n  braceHashL: createToken(\"#{\", { beforeExpr, startsExpr }),\n  braceR: createToken(\"}\"),\n  braceBarR: createToken(\"|}\"),\n  parenL: createToken(\"(\", { beforeExpr, startsExpr }),\n  parenR: createToken(\")\"),\n  comma: createToken(\",\", { beforeExpr }),\n  semi: createToken(\";\", { beforeExpr }),\n  colon: createToken(\":\", { beforeExpr }),\n  doubleColon: createToken(\"::\", { beforeExpr }),\n  dot: createToken(\".\"),\n  question: createToken(\"?\", { beforeExpr }),\n  questionDot: createToken(\"?.\"),\n  arrow: createToken(\"=>\", { beforeExpr }),\n  template: createToken(\"template\"),\n  ellipsis: createToken(\"...\", { beforeExpr }),\n  backQuote: createToken(\"`\", { startsExpr }),\n  dollarBraceL: createToken(\"${\", { beforeExpr, startsExpr }),\n  // start: isTemplate\n  templateTail: createToken(\"...`\", { startsExpr }),\n  templateNonTail: createToken(\"...${\", { beforeExpr, startsExpr }),\n  // end: isTemplate\n  at: createToken(\"@\"),\n  hash: createToken(\"#\", { startsExpr }),\n\n  // Special hashbang token.\n  interpreterDirective: createToken(\"#!...\"),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  // start: isAssign\n  eq: createToken(\"=\", { beforeExpr, isAssign }),\n  assign: createToken(\"_=\", { beforeExpr, isAssign }),\n  slashAssign: createToken(\"_=\", { beforeExpr, isAssign }),\n  // These are only needed to support % and ^ as a Hack-pipe topic token.\n  // When the proposal settles on a token, the others can be merged with\n  // tt.assign.\n  xorAssign: createToken(\"_=\", { beforeExpr, isAssign }),\n  moduloAssign: createToken(\"_=\", { beforeExpr, isAssign }),\n  // end: isAssign\n\n  incDec: createToken(\"++/--\", { prefix, postfix, startsExpr }),\n  bang: createToken(\"!\", { beforeExpr, prefix, startsExpr }),\n  tilde: createToken(\"~\", { beforeExpr, prefix, startsExpr }),\n\n  // More possible topic tokens.\n  // When the proposal settles on a token, at least one of these may be removed.\n  doubleCaret: createToken(\"^^\", { startsExpr }),\n  doubleAt: createToken(\"@@\", { startsExpr }),\n\n  // start: isBinop\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  lt: createBinop(\"</>/<=/>=\", 7),\n  gt: createBinop(\"</>/<=/>=\", 7),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  bitShiftL: createBinop(\"<</>>/>>>\", 8),\n  bitShiftR: createBinop(\"<</>>/>>>\", 8),\n  plusMin: createToken(\"+/-\", { beforeExpr, binop: 9, prefix, startsExpr }),\n  // startsExpr: required by v8intrinsic plugin\n  modulo: createToken(\"%\", { binop: 10, startsExpr }),\n  // unset `beforeExpr` as it can be `function *`\n  star: createToken(\"*\", { binop: 10 }),\n  slash: createBinop(\"/\", 10),\n  exponent: createToken(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true,\n  }),\n\n  // Keywords\n  // Don't forget to update packages/babel-helper-validator-identifier/src/keyword.js\n  // when new keywords are added\n  // start: isLiteralPropertyName\n  // start: isKeyword\n  _in: createKeyword(\"in\", { beforeExpr, binop: 7 }),\n  _instanceof: createKeyword(\"instanceof\", { beforeExpr, binop: 7 }),\n  // end: isBinop\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", { beforeExpr }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", { beforeExpr }),\n  _else: createKeyword(\"else\", { beforeExpr }),\n  _finally: createKeyword(\"finally\"),\n  _function: createKeyword(\"function\", { startsExpr }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", { beforeExpr }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", { beforeExpr, prefix, startsExpr }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", { beforeExpr, startsExpr }),\n  _this: createKeyword(\"this\", { startsExpr }),\n  _super: createKeyword(\"super\", { startsExpr }),\n  _class: createKeyword(\"class\", { startsExpr }),\n  _extends: createKeyword(\"extends\", { beforeExpr }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", { startsExpr }),\n  _null: createKeyword(\"null\", { startsExpr }),\n  _true: createKeyword(\"true\", { startsExpr }),\n  _false: createKeyword(\"false\", { startsExpr }),\n  _typeof: createKeyword(\"typeof\", { beforeExpr, prefix, startsExpr }),\n  _void: createKeyword(\"void\", { beforeExpr, prefix, startsExpr }),\n  _delete: createKeyword(\"delete\", { beforeExpr, prefix, startsExpr }),\n  // start: isLoop\n  _do: createKeyword(\"do\", { isLoop, beforeExpr }),\n  _for: createKeyword(\"for\", { isLoop }),\n  _while: createKeyword(\"while\", { isLoop }),\n  // end: isLoop\n  // end: isKeyword\n\n  // Primary literals\n  // start: isIdentifier\n  _as: createKeywordLike(\"as\", { startsExpr }),\n  _assert: createKeywordLike(\"assert\", { startsExpr }),\n  _async: createKeywordLike(\"async\", { startsExpr }),\n  _await: createKeywordLike(\"await\", { startsExpr }),\n  _from: createKeywordLike(\"from\", { startsExpr }),\n  _get: createKeywordLike(\"get\", { startsExpr }),\n  _let: createKeywordLike(\"let\", { startsExpr }),\n  _meta: createKeywordLike(\"meta\", { startsExpr }),\n  _of: createKeywordLike(\"of\", { startsExpr }),\n  _sent: createKeywordLike(\"sent\", { startsExpr }),\n  _set: createKeywordLike(\"set\", { startsExpr }),\n  _static: createKeywordLike(\"static\", { startsExpr }),\n  _yield: createKeywordLike(\"yield\", { startsExpr }),\n\n  // Flow and TypeScript Keywordlike\n  _asserts: createKeywordLike(\"asserts\", { startsExpr }),\n  _checks: createKeywordLike(\"checks\", { startsExpr }),\n  _exports: createKeywordLike(\"exports\", { startsExpr }),\n  _global: createKeywordLike(\"global\", { startsExpr }),\n  _implements: createKeywordLike(\"implements\", { startsExpr }),\n  _intrinsic: createKeywordLike(\"intrinsic\", { startsExpr }),\n  _infer: createKeywordLike(\"infer\", { startsExpr }),\n  _is: createKeywordLike(\"is\", { startsExpr }),\n  _mixins: createKeywordLike(\"mixins\", { startsExpr }),\n  _proto: createKeywordLike(\"proto\", { startsExpr }),\n  _require: createKeywordLike(\"require\", { startsExpr }),\n  // start: isTSTypeOperator\n  _keyof: createKeywordLike(\"keyof\", { startsExpr }),\n  _readonly: createKeywordLike(\"readonly\", { startsExpr }),\n  _unique: createKeywordLike(\"unique\", { startsExpr }),\n  // end: isTSTypeOperator\n  // start: isTSDeclarationStart\n  _abstract: createKeywordLike(\"abstract\", { startsExpr }),\n  _declare: createKeywordLike(\"declare\", { startsExpr }),\n  _enum: createKeywordLike(\"enum\", { startsExpr }),\n  _module: createKeywordLike(\"module\", { startsExpr }),\n  _namespace: createKeywordLike(\"namespace\", { startsExpr }),\n  // start: isFlowInterfaceOrTypeOrOpaque\n  _interface: createKeywordLike(\"interface\", { startsExpr }),\n  _type: createKeywordLike(\"type\", { startsExpr }),\n  // end: isTSDeclarationStart\n  _opaque: createKeywordLike(\"opaque\", { startsExpr }),\n  // end: isFlowInterfaceOrTypeOrOpaque\n  name: createToken(\"name\", { startsExpr }),\n  // end: isIdentifier\n\n  string: createToken(\"string\", { startsExpr }),\n  num: createToken(\"num\", { startsExpr }),\n  bigint: createToken(\"bigint\", { startsExpr }),\n  decimal: createToken(\"decimal\", { startsExpr }),\n  // end: isLiteralPropertyName\n  regexp: createToken(\"regexp\", { startsExpr }),\n  privateName: createToken(\"#name\", { startsExpr }),\n  eof: createToken(\"eof\"),\n\n  // jsx plugin\n  jsxName: createToken(\"jsxName\"),\n  jsxText: createToken(\"jsxText\", { beforeExpr: true }),\n  jsxTagStart: createToken(\"jsxTagStart\", { startsExpr: true }),\n  jsxTagEnd: createToken(\"jsxTagEnd\"),\n\n  // placeholder plugin\n  placeholder: createToken(\"%%\", { startsExpr: true }),\n};\n\nexport function tokenIsIdentifier(token: TokenType): boolean {\n  return token >= tt._as && token <= tt.name;\n}\n\nexport function tokenKeywordOrIdentifierIsKeyword(token: TokenType): boolean {\n  // we can remove the token >= tt._in check when we\n  // know a token is either keyword or identifier\n  return token <= tt._while;\n}\n\nexport function tokenIsKeywordOrIdentifier(token: TokenType): boolean {\n  return token >= tt._in && token <= tt.name;\n}\n\nexport function tokenIsLiteralPropertyName(token: TokenType): boolean {\n  return token >= tt._in && token <= tt.decimal;\n}\n\nexport function tokenComesBeforeExpression(token: TokenType): boolean {\n  return tokenBeforeExprs[token];\n}\n\nexport function tokenCanStartExpression(token: TokenType): boolean {\n  return tokenStartsExprs[token];\n}\n\nexport function tokenIsAssignment(token: TokenType): boolean {\n  return token >= tt.eq && token <= tt.moduloAssign;\n}\n\nexport function tokenIsFlowInterfaceOrTypeOrOpaque(token: TokenType): boolean {\n  return token >= tt._interface && token <= tt._opaque;\n}\n\nexport function tokenIsLoop(token: TokenType): boolean {\n  return token >= tt._do && token <= tt._while;\n}\n\nexport function tokenIsKeyword(token: TokenType): boolean {\n  return token >= tt._in && token <= tt._while;\n}\n\nexport function tokenIsOperator(token: TokenType): boolean {\n  return token >= tt.pipeline && token <= tt._instanceof;\n}\n\nexport function tokenIsPostfix(token: TokenType): boolean {\n  return token === tt.incDec;\n}\n\nexport function tokenIsPrefix(token: TokenType): boolean {\n  return tokenPrefixes[token];\n}\n\nexport function tokenIsTSTypeOperator(token: TokenType): boolean {\n  return token >= tt._keyof && token <= tt._unique;\n}\n\nexport function tokenIsTSDeclarationStart(token: TokenType): boolean {\n  return token >= tt._abstract && token <= tt._type;\n}\n\nexport function tokenLabelName(token: TokenType): string {\n  return tokenLabels[token];\n}\n\nexport function tokenOperatorPrecedence(token: TokenType): number {\n  return tokenBinops[token];\n}\n\nexport function tokenIsBinaryOperator(token: TokenType): boolean {\n  return tokenBinops[token] !== -1;\n}\n\nexport function tokenIsRightAssociative(token: TokenType): boolean {\n  return token === tt.exponent;\n}\n\nexport function tokenIsTemplate(token: TokenType): boolean {\n  return token >= tt.templateTail && token <= tt.templateNonTail;\n}\n\nexport function getExportedToken(token: TokenType): ExportedTokenType {\n  return tokenTypes[token];\n}\n\nexport function isTokenType(obj: any): boolean {\n  return typeof obj === \"number\";\n}\n\nif (!process.env.BABEL_8_BREAKING) {\n  tokenTypes[tt.braceR].updateContext = context => {\n    context.pop();\n  };\n\n  tokenTypes[tt.braceL].updateContext =\n    tokenTypes[tt.braceHashL].updateContext =\n    tokenTypes[tt.dollarBraceL].updateContext =\n      context => {\n        context.push(tc.brace);\n      };\n\n  tokenTypes[tt.backQuote].updateContext = context => {\n    if (context[context.length - 1] === tc.template) {\n      context.pop();\n    } else {\n      context.push(tc.template);\n    }\n  };\n\n  tokenTypes[tt.jsxTagStart].updateContext = context => {\n    context.push(tc.j_expr, tc.j_oTag);\n  };\n}\n"],"mappings":"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"}