{"version":3,"names":["State","strict","curLine","lineStart","startLoc","endLoc","init","strictMode","sourceType","startLine","startColumn","Position","errors","potentialArrowAt","noArrowAt","noArrowParamsConversionAt","maybeInArrowParameters","inType","noAnonFunctionType","hasFlowComment","isAmbientContext","inAbstractClass","inDisallowConditionalTypesContext","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","comments","commentStack","pos","type","value","start","end","lastTokEndLoc","lastTokStartLoc","lastTokStart","context","ct","brace","canStartJSXElement","containsEsc","strictErrors","Map","tokensLength","curPosition","clone","skipArrays","state","keys","Object","i","length","key","val","Array","isArray","slice"],"sources":["../../src/tokenizer/state.ts"],"sourcesContent":["import type { Options } from \"../options\";\nimport * as N from \"../types\";\nimport type { CommentWhitespace } from \"../parser/comments\";\nimport { Position } from \"../util/location\";\n\nimport { types as ct, type TokContext } from \"./context\";\nimport { tt, type TokenType } from \"./types\";\nimport { Errors, type ParseError } from \"../parse-error\";\n\nexport type DeferredStrictError =\n  | typeof Errors.StrictNumericEscape\n  | typeof Errors.StrictOctalLiteral;\n\ntype TopicContextState = {\n  // When a topic binding has been currently established,\n  // then this is 1. Otherwise, it is 0. This is forwards compatible\n  // with a future plugin for multiple lexical topics.\n  maxNumOfResolvableTopics: number;\n  // When a topic binding has been currently established, and if that binding\n  // has been used as a topic reference `#`, then this is 0. Otherwise, it is\n  // `null`. This is forwards compatible with a future plugin for multiple\n  // lexical topics.\n  maxTopicIndex: null | 0;\n};\n\nexport default class State {\n  strict: boolean;\n  curLine: number;\n  lineStart: number;\n\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  startLoc: Position;\n  endLoc: Position;\n\n  init({ strictMode, sourceType, startLine, startColumn }: Options): void {\n    this.strict =\n      strictMode === false\n        ? false\n        : strictMode === true\n        ? true\n        : sourceType === \"module\";\n\n    this.curLine = startLine;\n    this.lineStart = -startColumn;\n    this.startLoc = this.endLoc = new Position(startLine, startColumn, 0);\n  }\n\n  errors: ParseError<any>[] = [];\n\n  // Used to signify the start of a potential arrow function\n  potentialArrowAt: number = -1;\n\n  // Used to signify the start of an expression which looks like a\n  // typed arrow function, but it isn't\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowAt: number[] = [];\n\n  // Used to signify the start of an expression whose params, if it looks like\n  // an arrow function, shouldn't be converted to assignable nodes.\n  // This is used to defer the validation of typed arrow functions inside\n  // conditional expressions.\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowParamsConversionAt: number[] = [];\n\n  // Flags to track\n  maybeInArrowParameters: boolean = false;\n  inType: boolean = false;\n  noAnonFunctionType: boolean = false;\n  hasFlowComment: boolean = false;\n  isAmbientContext: boolean = false;\n  inAbstractClass: boolean = false;\n  inDisallowConditionalTypesContext: boolean = false;\n\n  // For the Hack-style pipelines plugin\n  topicContext: TopicContextState = {\n    maxNumOfResolvableTopics: 0,\n    maxTopicIndex: null,\n  };\n\n  // For the F#-style pipelines plugin\n  soloAwait: boolean = false;\n  inFSharpPipelineDirectBody: boolean = false;\n\n  // Labels in scope.\n  labels: Array<{\n    kind: \"loop\" | \"switch\" | undefined | null;\n    name?: string | null;\n    statementStart?: number;\n  }> = [];\n\n  // Leading decorators. Last element of the stack represents the decorators in current context.\n  // Supports nesting of decorators, e.g. @foo(@bar class inner {}) class outer {}\n  // where @foo belongs to the outer class and @bar to the inner\n  decoratorStack: Array<Array<N.Decorator>> = [[]];\n\n  // Comment store for Program.comments\n  comments: Array<N.Comment> = [];\n\n  // Comment attachment store\n  commentStack: Array<CommentWhitespace> = [];\n\n  // The current position of the tokenizer in the input.\n  pos: number = 0;\n\n  // Properties of the current token:\n  // Its type\n  type: TokenType = tt.eof;\n\n  // For tokens that include more information than their type, the value\n  value: any = null;\n\n  // Its start and end offset\n  start: number = 0;\n  end: number = 0;\n\n  // Position information for the previous token\n  // this is initialized when generating the second token.\n  lastTokEndLoc: Position = null;\n  // this is initialized when generating the second token.\n  lastTokStartLoc: Position = null;\n  lastTokStart: number = 0;\n\n  // The context stack is used to track whether the apostrophe \"`\" starts\n  // or ends a string template\n  context: Array<TokContext> = [ct.brace];\n  // Used to track whether a JSX element is allowed to form\n  canStartJSXElement: boolean = true;\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  containsEsc: boolean = false;\n\n  // This property is used to track the following errors\n  // - StrictNumericEscape\n  // - StrictOctalLiteral\n  //\n  // in a literal that occurs prior to/immediately after a \"use strict\" directive.\n\n  // todo(JLHwung): set strictErrors to null and avoid recording string errors\n  // after a non-directive is parsed\n  strictErrors: Map<number, [DeferredStrictError, Position]> = new Map();\n\n  // Tokens length in token store\n  tokensLength: number = 0;\n\n  curPosition(): Position {\n    return new Position(this.curLine, this.pos - this.lineStart, this.pos);\n  }\n\n  clone(skipArrays?: boolean): State {\n    const state = new State();\n    const keys = Object.keys(this) as (keyof State)[];\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      // @ts-expect-error\n      state[key] = val;\n    }\n\n    return state;\n  }\n}\n\nexport type LookaheadState = {\n  pos: number;\n  value: any;\n  type: TokenType;\n  start: number;\n  end: number;\n  context: TokContext[];\n  startLoc: Position;\n  lastTokEndLoc: Position;\n  curLine: number;\n  lineStart: number;\n  curPosition: () => Position;\n  /* Used only in readToken_mult_modulo */\n  inType: boolean;\n};\n"],"mappings":";;;;;;;AACA;;AAEA;;AAEA;;AACA;;AACA;;AAkBe,MAAMA,KAAN,CAAY;EACzBC,MAAM;EACNC,OAAO;EACPC,SAAS;EAITC,QAAQ;EACRC,MAAM;;EAENC,IAAI,CAAC;IAAEC,UAAF;IAAcC,UAAd;IAA0BC,SAA1B;IAAqCC;EAArC,CAAD,EAAoE;IACtE,KAAKT,MAAL,GACEM,UAAU,KAAK,KAAf,GACI,KADJ,GAEIA,UAAU,KAAK,IAAf,GACA,IADA,GAEAC,UAAU,KAAK,QALrB;IAOA,KAAKN,OAAL,GAAeO,SAAf;IACA,KAAKN,SAAL,GAAiB,CAACO,WAAlB;IACA,KAAKN,QAAL,GAAgB,KAAKC,MAAL,GAAc,IAAIM,kBAAJ,CAAaF,SAAb,EAAwBC,WAAxB,EAAqC,CAArC,CAA9B;EACD;;EAEDE,MAAM,GAAsB,EAAtB;EAGNC,gBAAgB,GAAW,CAAC,CAAZ;EAMhBC,SAAS,GAAa,EAAb;EAQTC,yBAAyB,GAAa,EAAb;EAGzBC,sBAAsB,GAAY,KAAZ;EACtBC,MAAM,GAAY,KAAZ;EACNC,kBAAkB,GAAY,KAAZ;EAClBC,cAAc,GAAY,KAAZ;EACdC,gBAAgB,GAAY,KAAZ;EAChBC,eAAe,GAAY,KAAZ;EACfC,iCAAiC,GAAY,KAAZ;EAGjCC,YAAY,GAAsB;IAChCC,wBAAwB,EAAE,CADM;IAEhCC,aAAa,EAAE;EAFiB,CAAtB;EAMZC,SAAS,GAAY,KAAZ;EACTC,0BAA0B,GAAY,KAAZ;EAG1BC,MAAM,GAID,EAJC;EASNC,cAAc,GAA8B,CAAC,EAAD,CAA9B;EAGdC,QAAQ,GAAqB,EAArB;EAGRC,YAAY,GAA6B,EAA7B;EAGZC,GAAG,GAAW,CAAX;EAIHC,IAAI;EAGJC,KAAK,GAAQ,IAAR;EAGLC,KAAK,GAAW,CAAX;EACLC,GAAG,GAAW,CAAX;EAIHC,aAAa,GAAa,IAAb;EAEbC,eAAe,GAAa,IAAb;EACfC,YAAY,GAAW,CAAX;EAIZC,OAAO,GAAsB,CAACC,cAAA,CAAGC,KAAJ,CAAtB;EAEPC,kBAAkB,GAAY,IAAZ;EAKlBC,WAAW,GAAY,KAAZ;EAUXC,YAAY,GAAiD,IAAIC,GAAJ,EAAjD;EAGZC,YAAY,GAAW,CAAX;;EAEZC,WAAW,GAAa;IACtB,OAAO,IAAIrC,kBAAJ,CAAa,KAAKT,OAAlB,EAA2B,KAAK8B,GAAL,GAAW,KAAK7B,SAA3C,EAAsD,KAAK6B,GAA3D,CAAP;EACD;;EAEDiB,KAAK,CAACC,UAAD,EAA8B;IACjC,MAAMC,KAAK,GAAG,IAAInD,KAAJ,EAAd;IACA,MAAMoD,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAY,IAAZ,CAAb;;IACA,KAAK,IAAIE,CAAC,GAAG,CAAR,EAAWC,MAAM,GAAGH,IAAI,CAACG,MAA9B,EAAsCD,CAAC,GAAGC,MAA1C,EAAkDD,CAAC,EAAnD,EAAuD;MACrD,MAAME,GAAG,GAAGJ,IAAI,CAACE,CAAD,CAAhB;MACA,IAAIG,GAAG,GAAG,KAAKD,GAAL,CAAV;;MAEA,IAAI,CAACN,UAAD,IAAeQ,KAAK,CAACC,OAAN,CAAcF,GAAd,CAAnB,EAAuC;QACrCA,GAAG,GAAGA,GAAG,CAACG,KAAJ,EAAN;MACD;;MAGDT,KAAK,CAACK,GAAD,CAAL,GAAaC,GAAb;IACD;;IAED,OAAON,KAAP;EACD;;AAhJwB"}