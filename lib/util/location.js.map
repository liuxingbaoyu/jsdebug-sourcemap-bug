{"version":3,"names":["Position","line","column","index","constructor","col","SourceLocation","start","end","filename","identifierName","createPositionWithColumnOffset","position","columnOffset"],"sources":["../../src/util/location.ts"],"sourcesContent":["export type Pos = {\n  start: number;\n};\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nexport class Position {\n  line: number;\n  column: number;\n  index: number;\n\n  constructor(line: number, col: number, index: number) {\n    this.line = line;\n    this.column = col;\n    this.index = index;\n  }\n}\n\nexport class SourceLocation {\n  start: Position;\n  end: Position;\n  filename: string;\n  identifierName: string | undefined | null;\n\n  constructor(start: Position, end?: Position) {\n    this.start = start;\n    // (may start as null, but initialized later)\n    this.end = end;\n  }\n}\n\n/**\n * creates a new position with a non-zero column offset from the given position.\n * This function should be only be used when we create AST node out of the token\n * boundaries, such as TemplateElement ends before tt.templateNonTail. This\n * function does not skip whitespaces.\n *\n * @export\n * @param {Position} position\n * @param {number} columnOffset\n * @returns {Position}\n */\nexport function createPositionWithColumnOffset(\n  position: Position,\n  columnOffset: number,\n) {\n  const { line, column, index } = position;\n  return new Position(line, column + columnOffset, index + columnOffset);\n}\n"],"mappings":";;;;;;;;AAOO,MAAMA,QAAN,CAAe;EACpBC,IAAI;EACJC,MAAM;EACNC,KAAK;;EAELC,WAAW,CAACH,IAAD,EAAeI,GAAf,EAA4BF,KAA5B,EAA2C;IACpD,KAAKF,IAAL,GAAYA,IAAZ;IACA,KAAKC,MAAL,GAAcG,GAAd;IACA,KAAKF,KAAL,GAAaA,KAAb;EACD;;AATmB;;;;AAYf,MAAMG,cAAN,CAAqB;EAC1BC,KAAK;EACLC,GAAG;EACHC,QAAQ;EACRC,cAAc;;EAEdN,WAAW,CAACG,KAAD,EAAkBC,GAAlB,EAAkC;IAC3C,KAAKD,KAAL,GAAaA,KAAb;IAEA,KAAKC,GAAL,GAAWA,GAAX;EACD;;AAVyB;;;;AAwBrB,SAASG,8BAAT,CACLC,QADK,EAELC,YAFK,EAGL;EACA,MAAM;IAAEZ,IAAF;IAAQC,MAAR;IAAgBC;EAAhB,IAA0BS,QAAhC;EACA,OAAO,IAAIZ,QAAJ,CAAaC,IAAb,EAAmBC,MAAM,GAAGW,YAA5B,EAA0CV,KAAK,GAAGU,YAAlD,CAAP;AACD"}