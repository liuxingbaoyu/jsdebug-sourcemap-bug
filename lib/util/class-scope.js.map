{"version":3,"names":["ClassScope","privateNames","Set","loneAccessors","Map","undefinedPrivateNames","ClassScopeHandler","parser","stack","constructor","current","length","enter","push","exit","oldClassScope","pop","name","loc","Array","from","has","set","raise","Errors","InvalidPrivateFieldResolution","at","identifierName","declarePrivateName","elementType","redefined","CLASS_ELEMENT_KIND_ACCESSOR","accessor","get","oldStatic","CLASS_ELEMENT_FLAG_STATIC","newStatic","oldKind","newKind","delete","PrivateNameRedeclaration","add","usePrivateName","classScope"],"sources":["../../src/util/class-scope.ts"],"sourcesContent":["import {\n  CLASS_ELEMENT_KIND_ACCESSOR,\n  CLASS_ELEMENT_FLAG_STATIC,\n  type ClassElementTypes,\n} from \"./scopeflags\";\nimport { Position } from \"./location\";\nimport { Errors } from \"../parse-error\";\nimport Tokenizer from \"../tokenizer\";\n\nexport class ClassScope {\n  // A list of private named declared in the current class\n  privateNames: Set<string> = new Set();\n\n  // A list of private getters of setters without their counterpart\n  loneAccessors: Map<string, ClassElementTypes> = new Map();\n\n  // A list of private names used before being defined, mapping to\n  // their position.\n  undefinedPrivateNames: Map<string, Position> = new Map();\n}\n\nexport default class ClassScopeHandler {\n  parser: Tokenizer;\n  stack: Array<ClassScope> = [];\n  undefinedPrivateNames: Map<string, Position> = new Map();\n\n  constructor(parser: Tokenizer) {\n    this.parser = parser;\n  }\n\n  current(): ClassScope {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n\n    // Migrate the usage of not yet defined private names to the outer\n    // class scope, or raise an error if we reached the top-level scope.\n\n    const current = this.current();\n\n    // Array.from is needed because this is compiled to an array-like for loop\n    for (const [name, loc] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, loc);\n        }\n      } else {\n        this.parser.raise(Errors.InvalidPrivateFieldResolution, {\n          at: loc,\n          identifierName: name,\n        });\n      }\n    }\n  }\n\n  declarePrivateName(\n    name: string,\n    elementType: ClassElementTypes,\n    loc: Position,\n  ) {\n    const { privateNames, loneAccessors, undefinedPrivateNames } =\n      this.current();\n    let redefined = privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && loneAccessors.get(name);\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n\n        // The private name can be duplicated only if it is used by\n        // two accessors with different kind (get and set), and if\n        // they have the same placement (static or not).\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n\n        if (!redefined) loneAccessors.delete(name);\n      } else if (!redefined) {\n        loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.parser.raise(Errors.PrivateNameRedeclaration, {\n        at: loc,\n        identifierName: name,\n      });\n    }\n\n    privateNames.add(name);\n    undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name: string, loc: Position) {\n    let classScope;\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, loc);\n    } else {\n      // top-level\n      this.parser.raise(Errors.InvalidPrivateFieldResolution, {\n        at: loc,\n        identifierName: name,\n      });\n    }\n  }\n}\n"],"mappings":"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"}