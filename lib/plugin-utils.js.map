{"version":3,"names":["hasPlugin","plugins","expectedConfig","expectedName","expectedOptions","expectedKeys","Object","keys","expectedOptionsIsEmpty","length","some","p","pluginName","pluginOptions","key","getPluginOption","name","option","plugin","find","Array","isArray","PIPELINE_PROPOSALS","TOPIC_TOKENS","RECORD_AND_TUPLE_SYNTAX_TYPES","validatePlugins","Error","decoratorsBeforeExport","proposal","includes","proposalList","map","join","tupleSyntaxIsHash","syntaxType","topicToken","tokenList","t","process","env","BABEL_8_BREAKING","moduleAttributesVersionPluginOption","error","missingPlugins","mixinPlugins","estree","jsx","flow","typescript","v8intrinsic","placeholders","mixinPluginNames"],"sources":["../src/plugin-utils.ts"],"sourcesContent":["import type Parser from \"./parser\";\nimport type {\n  ParserPluginWithOptions,\n  PluginConfig,\n  PluginOptions,\n} from \"./typings\";\n\nexport type Plugin = PluginConfig;\n\nexport type PluginList = PluginConfig[];\n\nexport type MixinPlugin = (superClass: { new (...args: any): Parser }) => {\n  new (...args: any): Parser;\n};\n\n// This functionâ€™s second parameter accepts either a string (plugin name) or an\n// array pair (plugin name and options object). If an options object is given,\n// then each value is non-recursively checked for identity with the actual\n// option value of each plugin in the first argument (which is an array of\n// plugin names or array pairs).\nexport function hasPlugin(\n  plugins: PluginList,\n  expectedConfig: PluginConfig,\n): boolean {\n  // The expectedOptions object is by default an empty object if the given\n  // expectedConfig argument does not give an options object (i.e., if it is a\n  // string).\n  const [expectedName, expectedOptions] =\n    typeof expectedConfig === \"string\" ? [expectedConfig, {}] : expectedConfig;\n\n  const expectedKeys = Object.keys(expectedOptions);\n\n  const expectedOptionsIsEmpty = expectedKeys.length === 0;\n\n  return plugins.some(p => {\n    if (typeof p === \"string\") {\n      return expectedOptionsIsEmpty && p === expectedName;\n    } else {\n      const [pluginName, pluginOptions] = p;\n      if (pluginName !== expectedName) {\n        return false;\n      }\n      for (const key of expectedKeys) {\n        // @ts-expect-error key may not exist in plugin options\n        if (pluginOptions[key] !== expectedOptions[key]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  });\n}\n\nexport function getPluginOption<\n  PluginName extends ParserPluginWithOptions[0],\n  OptionName extends keyof PluginOptions<PluginName>,\n>(plugins: PluginList, name: PluginName, option: OptionName) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin) && plugin.length > 1) {\n    return (plugin[1] as PluginOptions<PluginName>)[option];\n  }\n\n  return null;\n}\n\nconst PIPELINE_PROPOSALS = [\"minimal\", \"fsharp\", \"hack\", \"smart\"];\nconst TOPIC_TOKENS = [\"^^\", \"@@\", \"^\", \"%\", \"#\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\n\nexport function validatePlugins(plugins: PluginList) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\n        \"Cannot use the decorators and decorators-legacy plugin together\",\n      );\n    }\n\n    const decoratorsBeforeExport = getPluginOption(\n      plugins,\n      \"decorators\",\n      \"decoratorsBeforeExport\",\n    );\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\n        \"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" +\n          \" whose value must be a boolean. If you are migrating from\" +\n          \" Babylon/Babel 6 or want to use the old decorators proposal, you\" +\n          \" should use the 'decorators-legacy' plugin instead of 'decorators'.\",\n      );\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\")) {\n    const proposal = getPluginOption(plugins, \"pipelineOperator\", \"proposal\");\n\n    if (!PIPELINE_PROPOSALS.includes(proposal)) {\n      const proposalList = PIPELINE_PROPOSALS.map(p => `\"${p}\"`).join(\", \");\n      throw new Error(\n        `\"pipelineOperator\" requires \"proposal\" option whose value must be one of: ${proposalList}.`,\n      );\n    }\n\n    const tupleSyntaxIsHash = hasPlugin(plugins, [\n      \"recordAndTuple\",\n      { syntaxType: \"hash\" },\n    ]);\n\n    if (proposal === \"hack\") {\n      if (hasPlugin(plugins, \"placeholders\")) {\n        throw new Error(\n          \"Cannot combine placeholders plugin and Hack-style pipes.\",\n        );\n      }\n\n      if (hasPlugin(plugins, \"v8intrinsic\")) {\n        throw new Error(\n          \"Cannot combine v8intrinsic plugin and Hack-style pipes.\",\n        );\n      }\n\n      const topicToken = getPluginOption(\n        plugins,\n        \"pipelineOperator\",\n        \"topicToken\",\n      );\n\n      if (!TOPIC_TOKENS.includes(topicToken)) {\n        const tokenList = TOPIC_TOKENS.map(t => `\"${t}\"`).join(\", \");\n\n        throw new Error(\n          `\"pipelineOperator\" in \"proposal\": \"hack\" mode also requires a \"topicToken\" option whose value must be one of: ${tokenList}.`,\n        );\n      }\n\n      if (topicToken === \"#\" && tupleSyntaxIsHash) {\n        throw new Error(\n          'Plugin conflict between `[\"pipelineOperator\", { proposal: \"hack\", topicToken: \"#\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.',\n        );\n      }\n    } else if (proposal === \"smart\" && tupleSyntaxIsHash) {\n      throw new Error(\n        'Plugin conflict between `[\"pipelineOperator\", { proposal: \"smart\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.',\n      );\n    }\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    if (process.env.BABEL_8_BREAKING) {\n      throw new Error(\n        \"`moduleAttributes` has been removed in Babel 8, please use `importAssertions` parser plugin, or `@babel/plugin-syntax-import-assertions`.\",\n      );\n    } else {\n      if (hasPlugin(plugins, \"importAssertions\")) {\n        throw new Error(\n          \"Cannot combine importAssertions and moduleAttributes plugins.\",\n        );\n      }\n      const moduleAttributesVersionPluginOption = getPluginOption(\n        plugins,\n        \"moduleAttributes\",\n        \"version\",\n      );\n      if (moduleAttributesVersionPluginOption !== \"may-2020\") {\n        throw new Error(\n          \"The 'moduleAttributes' plugin requires a 'version' option,\" +\n            \" representing the last proposal update. Currently, the\" +\n            \" only supported value is 'may-2020'.\",\n        );\n      }\n    }\n  }\n\n  if (\n    hasPlugin(plugins, \"recordAndTuple\") &&\n    !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(\n      getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"),\n    )\n  ) {\n    throw new Error(\n      \"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" +\n        RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"),\n    );\n  }\n\n  if (\n    hasPlugin(plugins, \"asyncDoExpressions\") &&\n    !hasPlugin(plugins, \"doExpressions\")\n  ) {\n    const error = new Error(\n      \"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\",\n    );\n    // @ts-expect-error\n    error.missingPlugins = \"doExpressions\"; // so @babel/core can provide better error message\n    throw error;\n  }\n}\n\n// These plugins are defined using a mixin which extends the parser class.\n\nimport estree from \"./plugins/estree\";\nimport flow from \"./plugins/flow\";\nimport jsx from \"./plugins/jsx\";\nimport typescript from \"./plugins/typescript\";\nimport placeholders from \"./plugins/placeholders\";\nimport v8intrinsic from \"./plugins/v8intrinsic\";\n\n// NOTE: order is important. estree must come first; placeholders must come last.\nexport const mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders,\n};\n\nexport const mixinPluginNames = Object.keys(mixinPlugins) as ReadonlyArray<\n  \"estree\" | \"jsx\" | \"flow\" | \"typescript\" | \"v8intrinsic\" | \"placeholders\"\n>;\n"],"mappings":"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"}