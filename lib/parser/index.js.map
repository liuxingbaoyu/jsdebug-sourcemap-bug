{"version":3,"names":["Parser","StatementParser","constructor","options","input","getOptions","initializeScopes","plugins","pluginsMap","filename","sourceFilename","getScopeHandler","ScopeHandler","parse","enterInitialScopes","file","startNode","program","nextToken","errors","parseTopLevel","state","pluginMap","Map","plugin","name","Array","isArray","has","set"],"sources":["../../src/parser/index.ts"],"sourcesContent":["import type { Options } from \"../options\";\nimport type * as N from \"../types\";\nimport type { PluginList } from \"../plugin-utils\";\nimport { getOptions } from \"../options\";\nimport StatementParser from \"./statement\";\nimport ScopeHandler from \"../util/scope\";\n\nexport type PluginsMap = Map<\n  string,\n  {\n    [x: string]: any;\n  }\n>;\n\nexport default class Parser extends StatementParser {\n  // Forward-declaration so typescript plugin can override jsx plugin\n  // todo(flow->ts) - this probably can be removed\n  // abstract jsxParseOpeningElementAfterName(\n  //   node: N.JSXOpeningElement,\n  // ): N.JSXOpeningElement;\n\n  constructor(options: Options | undefined | null, input: string) {\n    options = getOptions(options);\n    super(options, input);\n\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  // This can be overwritten, for example, by the TypeScript plugin.\n  getScopeHandler(): {\n    new (...args: any): ScopeHandler;\n  } {\n    return ScopeHandler;\n  }\n\n  parse(): N.File {\n    this.enterInitialScopes();\n    const file = this.startNode() as N.File;\n    const program = this.startNode() as N.Program;\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n}\n\nfunction pluginsMap(plugins: PluginList): PluginsMap {\n  const pluginMap: PluginsMap = new Map();\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n  return pluginMap;\n}\n"],"mappings":";;;;;;;AAGA;;AACA;;AACA;;AASe,MAAMA,MAAN,SAAqBC,kBAArB,CAAqC;EAOlDC,WAAW,CAACC,OAAD,EAAsCC,KAAtC,EAAqD;IAC9DD,OAAO,GAAG,IAAAE,mBAAA,EAAWF,OAAX,CAAV;IACA,MAAMA,OAAN,EAAeC,KAAf;IAEA,KAAKD,OAAL,GAAeA,OAAf;IACA,KAAKG,gBAAL;IACA,KAAKC,OAAL,GAAeC,UAAU,CAAC,KAAKL,OAAL,CAAaI,OAAd,CAAzB;IACA,KAAKE,QAAL,GAAgBN,OAAO,CAACO,cAAxB;EACD;;EAGDC,eAAe,GAEb;IACA,OAAOC,cAAP;EACD;;EAEDC,KAAK,GAAW;IACd,KAAKC,kBAAL;IACA,MAAMC,IAAI,GAAG,KAAKC,SAAL,EAAb;IACA,MAAMC,OAAO,GAAG,KAAKD,SAAL,EAAhB;IACA,KAAKE,SAAL;IACAH,IAAI,CAACI,MAAL,GAAc,IAAd;IACA,KAAKC,aAAL,CAAmBL,IAAnB,EAAyBE,OAAzB;IACAF,IAAI,CAACI,MAAL,GAAc,KAAKE,KAAL,CAAWF,MAAzB;IACA,OAAOJ,IAAP;EACD;;AAjCiD;;;;AAoCpD,SAASP,UAAT,CAAoBD,OAApB,EAAqD;EACnD,MAAMe,SAAqB,GAAG,IAAIC,GAAJ,EAA9B;;EACA,KAAK,MAAMC,MAAX,IAAqBjB,OAArB,EAA8B;IAC5B,MAAM,CAACkB,IAAD,EAAOtB,OAAP,IAAkBuB,KAAK,CAACC,OAAN,CAAcH,MAAd,IAAwBA,MAAxB,GAAiC,CAACA,MAAD,EAAS,EAAT,CAAzD;IACA,IAAI,CAACF,SAAS,CAACM,GAAV,CAAcH,IAAd,CAAL,EAA0BH,SAAS,CAACO,GAAV,CAAcJ,IAAd,EAAoBtB,OAAO,IAAI,EAA/B;EAC3B;;EACD,OAAOmB,SAAP;AACD"}